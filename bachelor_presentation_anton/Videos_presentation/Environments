   #just for me to navigate during the presentation


    # Fetch
    register(
        id='FetchSlide{}-v1'.format(suffix),


    register(
        id='FetchPickAndPlace{}-v1'.format(suffix),


    register(
        id='FetchReach{}-v1'.format(suffix),


    register(
        id='FetchPush{}-v1'.format(suffix),


#Testing
    register(
        id='FetchSlideball{}-v0'.format(suffix),


#FetchSlide with a ball
    register(
        id='FetchSlideball{}-v1'.format(suffix),


#longer distance
    register(
        id='FetchSlideball{}-v2'.format(suffix),


#v2, but 10% friction
    register(
        id='FetchSlideball{}-v3'.format(suffix),


#v2, but 50% friction
    register(
        id='FetchSlideball{}-v4'.format(suffix),


#v4, but bigger goal range -> for demonstrating purposes
    register(
        id='FetchSlideball{}-v5'.format(suffix),


#v2, but with 25% friction
    register(
        id='FetchSlideball{}-v6'.format(suffix),


#v1, but 10x distance. should be impossible, for testing stuff
    register(
        id='FetchSlideball{}-v9'.format(suffix),


#just testing if tossing is physically possible
    register(
        id='FetchToss{}-v0'.format(suffix),



#FetchPickAndPlace with ball, but goal is in a box in some distance, toss needed
    register(
        id='FetchToss{}-v1'.format(suffix),


#v2, better box, some friction
    register(
        id='FetchToss{}-v2'.format(suffix),
        entry_point='gym.envs.robotics:FetchTossEnv2',
        kwargs=kwargs,
        max_episode_steps=50,
    )


#like v2, double steps per episode
    register(
        id='FetchToss{}-v3'.format(suffix),



#less weight on the Ball
    register(
        id='FetchToss{}-v4'.format(suffix),


#this includes the PickAndPlace goals. And adds another goal. No friction. Weight is still 1%. Tossing is needed to reach the upper table (0.5). only 50 steps -> it works :D
    register(
        id='FetchToss{}-v5'.format(suffix),


#same as v5, but with friction (same friction as in FetchSlide)
    register(
        id='FetchToss{}-v6'.format(suffix),


#v6, but with bigger upper table and goal range on upper table
    register(
        id='FetchToss{}-v7'.format(suffix),


#v7, but with no friction and 10x more weight 
    register(
        id='FetchToss{}-v8'.format(suffix),


#v7, but with no friction 10x less weight 
    register(
        id='FetchToss{}-v9'.format(suffix),


#v7, but with no friction
    register(
        id='FetchToss{}-v10'.format(suffix),


#v5, but table is 1 high
    register(
        id='FetchToss{}-v11'.format(suffix),


#v5, but table is 0.85 (FetchPickAndPlace: goal range was from 0.4 to 0.85)  high #todo
    register(
        id='FetchToss{}-v12'.format(suffix),



#v5, but table is 0.7 high
    register(
        id='FetchToss{}-v13'.format(suffix),


#v5, but with 10x more weight 
    register(
        id='FetchToss{}-v14'.format(suffix),


#v5, but with 10x less weight 
    register(
        id='FetchToss{}-v15'.format(suffix),

#fetchtoss but with cube
    register(
        id='FetchTosscube{}-v1'.format(suffix),



#same as FetchPickAndPlace, but with ball
    register(
        id='FetchPickAndPlaceball{}-v1'.format(suffix),


#same as FetchPickAndPlace, but goal is only in the air
    register(
        id='FetchPickAndPlaceAir{}-v1'.format(suffix),

